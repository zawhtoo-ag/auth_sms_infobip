<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <template id="login_inherit_infobip" inherit_id="web.login_layout">
        <xpath expr="//div[contains(@class, 'card-body')]" position="replace">
            <div class="card-body">
                <div class="oe_login_form">
                    <ul class="nav nav-tabs" id="loginTabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="email-tab" data-bs-toggle="tab" href="#emailLogin" role="tab" aria-controls="emailLogin" aria-selected="true">Login with Email</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="phone-tab" data-bs-toggle="tab" href="#phoneLogin" role="tab" aria-controls="phoneLogin" aria-selected="false">Login with Phone</a>
                        </li>
                    </ul>
                    <div class="tab-content" id="loginTabContent">
                        <!-- Email Login Tab -->
                        <div class="tab-pane fade show active" id="emailLogin" role="tabpanel" aria-labelledby="email-tab">
                            <form role="form" method="post" t-att-action="'/web/login'" onsubmit="this.action = '/web/login' + location.hash">
                                <input type="hidden" name="csrf_token" t-att-value="request.csrf_token()"/>
                                <div class="mb-3 field-login">
                                    <label for="login-email" class="form-label">Email</label>
                                    <input type="text" placeholder="Email" name="login" t-att-value="login" id="login-email" class="form-control" required="required" autocapitalize="off" autocomplete="username"/>
                                </div>
                                <div class="mb-3 field-password">
                                    <label for="password-email" class="form-label">Password</label>
                                    <input type="password" placeholder="Password" name="password" id="password-email" class="form-control" required="required" autocomplete="current-password" t-att-autofocus="'autofocus' if login else None" maxlength="4096"/>
                                </div>
                                <p class="alert alert-danger" t-if="error" role="alert">
                                    <t t-esc="error"/>
                                </p>
                                <p class="alert alert-success" t-if="message" role="status">
                                    <t t-esc="message"/>
                                </p>
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div class="form-check">
                                        <input type="checkbox" name="remember_me" id="remember_me" class="form-check-input"/>
                                        <label for="remember_me" class="form-check-label">Remember me</label>
                                    </div>
                                    <a t-if="reset_password_enabled" href="/web/reset_password" class="text-muted">Reset Password</a>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">Log in</button>
                            </form>
                        </div>
                        <!-- Phone Login Tab -->
                        <div class="tab-pane fade" id="phoneLogin" role="tabpanel" aria-labelledby="phone-tab">
                            <div class="mb-3 field-phone">
                                <label for="phone" class="form-label">Phone Number</label>
                                <input type="text" name="phone" id="phone" class="form-control" placeholder="e.g., +6591234567" required="required" autofocus="autofocus"/>
                            </div>
                            <button id="send-otp-button" class="btn btn-primary w-100 mb-3">Send OTP</button>
                            <div class="d-none" id="verifyOtpForm">
                                <div class="mb-3 field-otp">
                                    <label for="otp" class="form-label">Enter OTP</label>
                                    <input type="text" name="otp" id="otp" class="form-control" required="required"/>
                                </div>
                                <button id="verify-otp-button" class="btn btn-primary w-100">Verify OTP</button>
                            </div>
                            <p id="error-message" class="alert alert-danger d-none" role="alert"></p>
                        </div>
                    </div>
                </div>
                <!-- Inline JavaScript -->
                <script type="text/javascript">
                    document.addEventListener('DOMContentLoaded', function () {
                        const sendOtpButton = document.getElementById('send-otp-button');
                        const verifyOtpButton = document.getElementById('verify-otp-button');
                        const errorMessage = document.getElementById('error-message');
                        const otpSection = document.getElementById('verifyOtpForm');

                        if (sendOtpButton) {
                            sendOtpButton.addEventListener('click', function (ev) {
                                ev.preventDefault();
                                const phone = document.getElementById('phone').value.trim();
                                if (!phone) {
                                    errorMessage.classList.remove('d-none');
                                    errorMessage.textContent = 'Phone number is required';
                                    return;
                                }

                                errorMessage.classList.add('d-none');
                                errorMessage.textContent = '';
                                fetch('/auth_sms_infobip/send_otp', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'Accept': 'application/json',
                                    },
                                    body: JSON.stringify({ phone: phone }),
                                })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error(`HTTP error! Status: ${response.status}`);
                                    }
                                    return response.text(); // Get the raw text first
                                })
                                .then(text => {
                                    try {
                                        const data = JSON.parse(text);
                                        if (data.success) {
                                            otpSection.classList.remove('d-none');
                                            sendOtpButton.disabled = true;
                                        } else {
                                            errorMessage.classList.remove('d-none');
                                            errorMessage.textContent = data.error || 'Failed to send OTP';
                                        }
                                    } catch (e) {
                                        throw new Error('Invalid JSON response: ' + text);
                                    }
                                })
                                .catch(error => {
                                    errorMessage.classList.remove('d-none');
                                    errorMessage.textContent = 'Error sending OTP: ' + error.message;
                                });
                            });
                        }

                        if (verifyOtpButton) {
                            verifyOtpButton.addEventListener('click', function (ev) {
                                ev.preventDefault();
                                const phone = document.getElementById('phone').value.trim();
                                const otp = document.getElementById('otp').value.trim();
                                if (!otp) {
                                    errorMessage.classList.remove('d-none');
                                    errorMessage.textContent = 'OTP is required';
                                    return;
                                }

                                errorMessage.classList.add('d-none');
                                errorMessage.textContent = '';
                                fetch('/auth_sms_infobip/verify_otp', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'Accept': 'application/json',
                                    },
                                    body: JSON.stringify({ phone: phone, otp: otp }),
                                })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error(`HTTP error! Status: ${response.status}`);
                                    }
                                    return response.text(); // Get the raw text first
                                })
                                .then(text => {
                                    try {
                                        const data = JSON.parse(text);
                                        if (data.success) {
                                            const urlParams = new URLSearchParams(window.location.search);
                                            const redirect = urlParams.get('redirect') || '/web';
                                            window.location.href = redirect;
                                        } else {
                                            errorMessage.classList.remove('d-none');
                                            errorMessage.textContent = data.error || 'Failed to verify OTP';
                                        }
                                    } catch (e) {
                                        throw new Error('Invalid JSON response: ' + text);
                                    }
                                })
                                .catch(error => {
                                    errorMessage.classList.remove('d-none');
                                    errorMessage.textContent = 'Error verifying OTP: ' + error.message;
                                });
                            });
                        }
                    });
                </script>
            </div>
        </xpath>
    </template>
</odoo>